#!/usr/bin/env bash
# ----------------------------------------------------------
# build_and_deploy.sh   (stand‚Äëalone, zero extra dependencies)
#
# 1. Detect Quarto or bookdown project
# 2. Build the site into docs/
# 3. Commit any changes (incl. docs/) and push to GitHub
# ----------------------------------------------------------

set -euo pipefail
IFS=$'\n\t'

# ---------- CONFIG ----------
PUSH_BRANCH="main"     # change if you use 'master' etc.
SITE_DIR="docs"        # folder served by GitHub Pages

# ---------- LOGGING ---------
log()   { printf "\033[0;32m%s\033[0m\n" "$1"; }
error() { printf "\033[0;31m%s\033[0m\n" "$1" >&2; }

# ---------- HELPERS ---------
ensure_common_r() {
  # Create a temporary stub _common.R if bookdown needs it
  if [[ ! -f "_common.R" ]]; then
    log "üõ†Ô∏è  Creating stub _common.R for bookdown ‚Ä¶"
    cat > _common.R <<'EOF'
# Stub generated by build_and_deploy.sh
# Add global knitr options or library() calls here if desired.
EOF
    COMMON_CREATED=1
  else
    COMMON_CREATED=0
  fi
}

cleanup_common_r() {
  # Remove the stub so we don't clutter the repo
  [[ ${COMMON_CREATED:-0} -eq 1 ]] && rm -f _common.R
}

# ---------- BUILD -----------
build_site() {
  log "üî®  Building site ‚Ä¶"

  if [[ -f "_quarto.yml" || -f "quarto.yml" ]]; then
    log "Detected Quarto project"
    quarto render .
  elif [[ -f "_bookdown.yml" ]] || grep -q "bookdown::" *.Rmd 2>/dev/null; then
    log "Detected bookdown project"
    ensure_common_r
    Rscript -e "bookdown::render_book('.', output_dir='${SITE_DIR}')"
    cleanup_common_r
    # bookdown‚Äôs default output dir is _book/
    if [[ -d "_book" ]]; then
      rm -rf "${SITE_DIR}"
      mv _book "${SITE_DIR}"
    fi
  else
    error "No Quarto or bookdown config found. Aborting."
    exit 1
  fi
}

# ---------- GIT -------------
commit_and_push() {
  git add -u                 # updated/deleted
  git add "${SITE_DIR}/"     # new docs files

  if ! git diff --cached --quiet; then
    local msg="${*:-rebuild on $(date '+%Y-%m-%d %H:%M:%S')}"
    log "üìù  Committing: ${msg}"
    git commit -m "${msg}"
    log "üöÄ  Pushing to ${PUSH_BRANCH} ‚Ä¶"
    git push origin "${PUSH_BRANCH}"
  else
    log "‚ÑπÔ∏è  Nothing to commit ‚Äî working tree clean."
  fi
}

# ---------- MAIN ------------
build_site
commit_and_push "$@"
log "‚úÖ  Done."
